# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Copy Directory
      run: |
        mkdir -p dist/admin
        cp admin/target/admin-4.3.jar dist/admin/
        cp admin/Dockerfile dist/admin/

        mkdir -p dist/buyer-api
        cp buyer-api/target/buyer-api-4.3.jar dist/buyer-api/   
        cp buyer-api/Dockerfile dist/buyer-api/ 

        mkdir -p dist/common-api
        cp common-api/target/common-api-4.3.jar dist/common-api/   
        cp common-api/Dockerfile dist/common-api/ 

        mkdir -p dist/consumer
        cp consumer/target/consumer-4.3.jar dist/consumer/   
        cp consumer/Dockerfile dist/consumer/ 

        mkdir -p dist/im-api
        cp im-api/target/im-api-4.3.jar dist/im-api/   
        cp im-api/Dockerfile dist/im-api/ 

        mkdir -p dist/manager-api
        cp manager-api/target/im-api-4.3.jar dist/manager-api/   
        cp manager-api/Dockerfile dist/manager-api/

        mkdir -p dist/seller-api
        cp seller-api/target/im-api-4.3.jar dist/seller-api/
        cp seller-api/Dockerfile dist/seller-api/

        mkdir -p dist/xxl-job
        cp xxl-job/xxl-job-admin-2.3.0-SNAPSHOT.jar dist/xxl-job/
        cp xxl-job/Dockerfile dist/xxl-job/
        cp xxl-job/application.properties dist/xxl-job/
    # ssh-keygen -m PEM -t rsa -b 4096
    # cat id_rsa.pub >> authorized_keys
    - name: Deploy admin
      uses: easingthemes/ssh-deploy@main
      env:
        # 本地.ssh文件下的私钥id_rsa，存在secrets的PRIVATE_KEY中
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        # 复制操作的参数。"-avzr --delete"意味部署时清空服务器目标目录下的文件
        ARGS: "-avz --delete"
        # 你想要上传的文件夹路径
        SOURCE: "dist/"  
        # 服务器域名/IP
        REMOTE_HOST: "1.13.245.30"
        # 服务器默认用户名为root
        REMOTE_USER: "root"
        # 通常是22
        REMOTE_PORT: 22
        # 远程服务器上的目标路径       
        TARGET: "/opt/lilishop/"
        SCRIPT_BEFORE: |
          whoami
          ls -al
        SCRIPT_AFTER: |
          whoami
          ls -al
          cd /opt/lilishop/